plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.compose'
    id 'com.google.devtools.ksp'
    id 'com.google.dagger.hilt.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-parcelize'
}

android {
    namespace = 'com.mfc.recentaudiobuffer'
    compileSdk = 36

    defaultConfig {
        applicationId = "com.mfc.recentaudiobuffer"
        minSdk = 32
        targetSdk = 36
        versionCode = 47
        versionName = "1.0.47"

        testInstrumentationRunner = "com.mfc.recentaudiobuffer.HiltTestRunner"
        testInstrumentationRunnerArguments.put('clearPackageData', 'false')
        vectorDrawables {
            useSupportLibrary = true
        }
    }

    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file("local.properties")
    if (localPropertiesFile.exists()) {
        localProperties.load(new FileInputStream(localPropertiesFile))
    }

    signingConfigs {
        release {
            if (localProperties.getProperty("RELEASE_STORE_FILE") != null) {
                storeFile file(localProperties.getProperty("RELEASE_STORE_FILE"))
                storePassword localProperties.getProperty("RELEASE_STORE_PASSWORD")
                keyAlias localProperties.getProperty("RELEASE_KEY_ALIAS")
                keyPassword localProperties.getProperty("RELEASE_KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            debuggable = false
            signingConfig = signingConfigs.release
            minifyEnabled = true
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")

            // --- Production Config ---
            buildConfigField("String", "STRIPE_API_KEY", "${localProperties.getProperty("STRIPE_API_KEY_LIVE")}")
            buildConfigField("String", "REWARDED_INTERSTITIAL_AD_ID", "\"ca-app-pub-5330230981165217/4603016372\"")
            buildConfigField("String", "BANNER_AD_ID", "\"ca-app-pub-5330230981165217/6883566605\"")
            manifestPlaceholders["admob_app_id"] = "ca-app-pub-5330230981165217~5808556024"
            buildConfigField "String", "BUILD_TYPE_NAME", "\"release\""
        }
        debug {
            applicationIdSuffix = ".debug"
            debuggable = true
            signingConfig = signingConfigs.debug

            // --- Debug Config ---
            buildConfigField("String", "STRIPE_API_KEY", "${localProperties.getProperty("STRIPE_API_KEY_TEST")}")
            buildConfigField("String", "REWARDED_INTERSTITIAL_AD_ID", "\"ca-app-pub-3940256099942544/5354046379\"")
            buildConfigField("String", "BANNER_AD_ID", "\"ca-app-pub-3940256099942544/9214589741\"")
            manifestPlaceholders["admob_app_id"] = "ca-app-pub-3940256099942544~3347511713"
            buildConfigField "String", "BUILD_TYPE_NAME", "\"debug\""
        }
        // Release but with test ads, for play console testing
        create("staging") {
            // Staging is a copy of release, but pointing to test/staging data
            initWith(getByName("release"))

            // Use test ads for staging builds
            buildConfigField("String", "REWARDED_INTERSTITIAL_AD_ID", "\"ca-app-pub-3940256099942544/5354046379\"")
            buildConfigField("String", "BANNER_AD_ID", "\"ca-app-pub-3940256099942544/9214589741\"")
            manifestPlaceholders["admob_app_id"] = "ca-app-pub-3940256099942544~3347511713"
            buildConfigField "String", "BUILD_TYPE_NAME", "\"staging\""
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs = ['-XXLanguage:+PropertyParamAnnotationDefaultTargetMode']
    }
    buildFeatures {
        compose = true
        viewBinding = true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.15'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // Android
    implementation 'androidx.activity:activity-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.8.9'
    implementation 'androidx.core:core-ktx'
    implementation 'androidx.core:core'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:2.2.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.2'
    implementation 'androidx.lifecycle:lifecycle-process:2.9.2'
    implementation 'com.google.android.libraries.identity.googleid:googleid:1.1.1'
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'androidx.compose.material3:material3-window-size-class-android:1.3.2'
    implementation 'com.google.android.play:integrity:1.4.0'
    implementation("androidx.work:work-runtime-ktx:2.10.3")
    implementation("androidx.hilt:hilt-work:1.2.0")

    // Testing
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.7.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-android:1.9.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.mockk:mockk:1.14.5'
    testImplementation 'io.mockk:mockk-android:1.14.5'
    // For Hilt instrumented tests
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.57")
    kspAndroidTest("com.google.dagger:hilt-android-compiler:2.57")
    // WorkManager testing
    androidTestImplementation("androidx.work:work-testing:2.10.3")
    // UI Automator for checking notifications
    androidTestImplementation("androidx.test.uiautomator:uiautomator:2.3.0")
    // Standard instrumented test libraries (usually already present)
    androidTestImplementation("androidx.test.ext:junit:1.3.0")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.7.0")
    // For testing Android Services
    androidTestImplementation("androidx.test:rules:1.7.0")
    androidTestImplementation("androidx.test.services:storage:1.6.0")
    androidTestImplementation("com.google.truth:truth:1.4.4")

    // Donation
    implementation platform("com.google.firebase:firebase-bom:34.1.0")
    implementation("com.google.firebase:firebase-auth")
    implementation("com.google.firebase:firebase-crashlytics")

    implementation("androidx.credentials:credentials:1.5.0")
    implementation("androidx.credentials:credentials-play-services-auth:1.5.0")
    implementation 'com.google.android.gms:play-services-ads:24.5.0'
    implementation("org.joda:joda-money:2.0.2")
    implementation("org.joda:joda-convert:3.0.1")

    implementation 'com.stripe:stripe-android:21.23.0'
    implementation("com.stripe:payments-ui-core:21.23.0")
    implementation("com.google.android.gms:play-services-pay:16.5.0")
    implementation 'com.google.android.gms:play-services-wallet:19.4.0'
    implementation("com.squareup.okhttp3:okhttp:5.1.0")

    // UI
    implementation("androidx.compose.material:material-icons-extended")
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation platform('androidx.compose:compose-bom:2025.08.00')
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    implementation 'androidx.activity:activity-compose:1.10.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose"
    implementation("androidx.constraintlayout:constraintlayout-compose:1.1.1")

    // Persistence
    implementation 'com.google.firebase:firebase-firestore-ktx:25.1.4'
    implementation 'com.google.firebase:firebase-firestore:26.0.0'
    implementation 'androidx.datastore:datastore-preferences:1.1.7'

    // Hilt dependencies
    implementation("com.google.dagger:hilt-android:2.57")
    ksp("com.google.dagger:hilt-compiler:2.57")
    implementation("androidx.hilt:hilt-navigation-compose:1.2.0")

    // Media
    implementation("androidx.media3:media3-exoplayer:1.8.0")
    implementation("androidx.media3:media3-ui:1.8.0")

    // Filtering
    implementation 'be.tarsos.dsp:core:2.5'
    implementation 'be.tarsos.dsp:jvm:2.5'
    implementation 'com.microsoft.onnxruntime:onnxruntime-android:1.22.0'
}